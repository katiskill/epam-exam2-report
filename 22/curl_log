[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5002-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>
[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5003-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>
[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5001-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>
[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5002-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>
[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5003-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>
[avc@centosVM ~]$ curl localhost:8081
<!doctype html>
<title>JavaScript Example</title>
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/normalize.css">
<link rel="stylesheet" href="https://unpkg.com/sakura.css@1.0.0/css/sakura-earthly.css">
<style>
  ul { margin: 0; padding: 0; display: flex; list-style-type: none; }
  li > * { padding: 1em; }
  li.active > a { color: #5e5e5e; border-bottom: 2px solid #4a4a4a; }
  form { display: flex; }
  label > input { width: 3em; }
  form > * { padding-right: 1em; }
  #result { font-weight: bold; }
</style>
<ul>
  <li><span>Type:</span>
  <li class="active">
    <a href="/">Plain</a>
  <li class="">
    <a href="/fetch">Fetch</a>
  <li class="">
    <a href="/jquery">jQuery</a>
</ul>
<hr>
hostname flask-5001-for-nginx
<p>
  <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a>
  is the plain JavaScript way to make requests. It's natively supported
  by all browsers.
</p>
<hr>
<form id="calc">
  <label>a <input name="a"></label>
  <span>+</span>
  <label>b <input name="b"></label>
  <input type="submit" value="Calculate">
</form>
<span>= <span id="result"></span></span>

  <script>
    function addSubmit(ev) {
      ev.preventDefault();
      var request = new XMLHttpRequest();
      request.addEventListener('load', addShow);
      request.open('POST', "/add");
      request.send(new FormData(this));
    }

    function addShow() {
      var data = JSON.parse(this.responseText);
      var span = document.getElementById('result');
      span.innerText = data.result;
    }

    var form = document.getElementById('calc');
    form.addEventListener('submit', addSubmit);
  </script>